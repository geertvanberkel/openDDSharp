#include <tao/orb.idl> // Workaround for the error C2961: inconsistent explicit instantiations, a previous explicit instantiation did not specify '__declspec(dllimport)'

module Test {

    #pragma DCPS_DATA_TYPE "Test::NestedTestStruct"    
    struct NestedTestStruct {
        long Id;
        string Message;
    };

    typedef sequence<long> LongList;
    typedef sequence<string> StringList;
    typedef sequence<wstring> WStringList;
    typedef sequence<NestedTestStruct> StructList;
    typedef long ArrayLong[5];
    typedef string ArrayString[10];
    typedef wstring ArrayWString[4];
    typedef NestedTestStruct ArrayStruct[5];
    typedef long MultiArrayLong[3][4][2];
    typedef string MultiArrayString[3][4][2];
    typedef wstring MultiArrayWString[3][4][2];
    typedef NestedTestStruct MultiArrayStruct[3][4][2];
    typedef float ArrayFloat[5];
    typedef double ArrayDouble[5];
    typedef long double ArrayLongDouble[5];
    typedef sequence<float> FloatList;
    typedef sequence<double> DoubleList;
    typedef sequence<long double> LongDoubleList;
    typedef float MultiArrayFloat[3][4][2];
    typedef double MultiArrayDouble[3][4][2];
    typedef long double MultiArrayLongDouble[3][4][2];
    typedef char ArrayChar[5];
    typedef wchar ArrayWChar[5];
    typedef sequence<char> CharList;
    typedef sequence<wchar> WCharList;
    typedef char MultiArrayChar[3][4][2];
    typedef wchar MultiArrayWChar[3][4][2];
    typedef short ArrayShort[5];
    typedef long long ArrayLongLong[5];
    typedef unsigned short ArrayUnsignedShort[5];
    typedef unsigned long ArrayUnsignedLong[5];
    typedef unsigned long long ArrayUnsignedLongLong[5];
    typedef sequence<short> ShortList;
    typedef sequence<long long> LongLongList;
    typedef sequence<unsigned short> UnsignedShortList;
    typedef sequence<unsigned long> UnsignedLongList;
    typedef sequence<unsigned long long> UnsignedLongLongList;
    typedef short MultiArrayShort[3][4][2];
    typedef long long MultiArrayLongLong[3][4][2];
    typedef unsigned short MultiArrayUnsignedShort[3][4][2];
    typedef unsigned long MultiArrayUnsignedLong[3][4][2];
    typedef unsigned long long MultiArrayUnsignedLongLong[3][4][2];

	#pragma DCPS_DATA_TYPE "Test::BasicTestStruct"    
	struct BasicTestStruct {
		long Id;
        string Message;
        wstring WMessage;
        LongList LongSequence;
        StringList StringSequence;
        WStringList WStringSequence;
        ArrayLong LongArray;
        ArrayString StringArray;
        ArrayWString WStringArray;        
        NestedTestStruct StructTest;
        StructList StructSequence;
        ArrayStruct StructArray;
        MultiArrayLong LongMultiArray;
        MultiArrayString StringMultiArray;
        MultiArrayWString WStringMultiArray;
        MultiArrayStruct StructMultiArray;
        float FloatType;
        double DoubleType;
        long double LongDoubleType;
        ArrayFloat FloatArray;
        ArrayDouble DoubleArray;
        ArrayLongDouble LongDoubleArray;
        FloatList FloatSequence;
        DoubleList DoubleSequence;
        LongDoubleList LongDoubleSequence;
        MultiArrayFloat FloatMultiArray;
        MultiArrayDouble DoubleMultiArray;
        MultiArrayLongDouble LongDoubleMultiArray;
        char CharType;
        wchar WCharType;
        ArrayChar CharArray;
        ArrayWChar WCharArray;
        CharList CharSequence;
        WCharList WCharSequence;
        MultiArrayChar CharMultiArray;
        MultiArrayWChar WCharMultiArray;
        short ShortType;
        long long LongLongType;
        unsigned short UnsignedShortType;
        unsigned long UnsignedLongType;
        unsigned long long UnsignedLongLongType;
        ArrayShort ShortArray;
        ArrayLongLong LongLongArray;
        ArrayUnsignedShort UnsignedShortArray;
        ArrayUnsignedLong UnsignedLongArray;
        ArrayUnsignedLongLong UnsignedLongLongArray;
        ShortList ShortSequence;
        LongLongList LongLongSequence;
        UnsignedShortList UnsignedShortSequence;
        UnsignedLongList UnsignedLongSequence;
        UnsignedLongLongList UnsignedLongLongSequence;
        MultiArrayShort ShortMultiArray;
        MultiArrayLongLong LongLongMultiArray;
        MultiArrayUnsignedShort UnsignedShortMultiArray;
        MultiArrayUnsignedLong UnsignedLongMultiArray;
        MultiArrayUnsignedLongLong UnsignedLongLongMultiArray;
	};

};
