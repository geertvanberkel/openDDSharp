jobs:
- job: VisualStudio2019
  timeoutInMinutes: 90
  pool:
    vmImage: windows-2019
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
      Debug32:
        BuildPlatform: Win32
        BuildConfiguration: Debug
      Release32:
        BuildPlatform: Win32
        BuildConfiguration: Release
  variables:
    VCPKG_ROOT: $(Build.SourcesDirectory)\ext\vcpkg
    OPENDDS_ROOT: $(Build.SourcesDirectory)\ext\OpenDDS
  steps:
    - script: |
        git clone -q --depth 1 git://github.com/Microsoft/vcpkg.git %VCPKG_ROOT%
        call %VCPKG_ROOT%\bootstrap-vcpkg.bat
        if %BuildPlatform%==x64 (set VCVARS_ARCH=x64) else set VCVARS_ARCH=x86
        set VCPKG_ARCH=%VCVARS_ARCH%-windows
        echo ##vso[task.setvariable variable=VcVarsArch]%VCVARS_ARCH%
        %VCPKG_ROOT%\vcpkg install --triplet %VCPKG_ARCH% openssl xerces-c
        rmdir /s/q %VCPKG_ROOT%\packages %VCPKG_ROOT%\buildtrees
        echo ##vso[task.setvariable variable=VcPkgInst]%VCPKG_ROOT%\installed\%VCPKG_ARCH%
      displayName: 'Vcpkg'
      failOnStderr: true
    - script: |
        git clone -q --depth 1 git://github.com/objectcomputing/OpenDDS.git %OPENDDS_ROOT%
        if %BuildPlatform%==x64 (set VC_ARCH=x64) else set VC_ARCH=Win32
        echo ##vso[task.setvariable variable=VcArch]%VC_ARCH%
        echo ##vso[task.setvariable variable=OpenDdsRoot]%OPENDDS_ROOT%
      displayName: 'Clone OpenDDS'
      failOnStderr: true
    - script: |
        git fetch -q && git fetch -q --tags
        git checkout -q tags/DDS-3.13.2
      displayName: 'Checkout OpenDDS v3.13.2'
      workingDirectory: '$(OpenDdsRoot)'
      failOnStderr: true
    - script: |
        git apply $(Build.SourcesDirectory)\Patches\ConditionImpl.h.patch
        git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.cpp.patch
        git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.h.patch
      displayName: 'Apply OpenDDS->OpenDDSharp Patches'
      workingDirectory: '$(OpenDdsRoot)'
      failOnStderr: true
    - task: PowerShell@2
      displayName: 'Download ACE/TAO'
      inputs:
        targetType: 'inline'
        script: '& { Invoke-WebRequest -Uri ''http://download.ociweb.com/TAO-2.2a/ACE+TAO-2.2a_with_latest_patches_NO_makefiles.zip'' -OutFile ACE+TAO-2.2a_with_latest_patches_NO_makefiles.zip }'
        workingDirectory: '$(OpenDdsRoot)'
        failOnStderr: true
        filePath: #
    - task: CmdLine@2
      displayName: 'Unzip ACE/TAO'
      inputs:
        script: '7z x ACE+TAO-2.2a_with_latest_patches_NO_makefiles.zip'
        workingDirectory: '$(OpenDdsRoot)'
        failOnStderr: true
    - task: BatchScript@1
      displayName: VcVars
      inputs:
        filename: '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"'
        arguments: $(VcVarsArch)
        modifyEnvironment: true
    - script: |
        setx PATH "C:\Strawberry\perl\bin;%PATH%"
      displayName: 'Put perl on PATH'
      failOnStderr: false
    - script: |
        echo %PATH%
        if %BuildConfiguration%==Release set OPT=--no-debug --optimize
        call configure -v --security --xerces3=$(VcPkgInst) --openssl=$(VcPkgInst) --no-tests %OPT%
      workingDirectory: $(OpenDdsRoot)
      displayName: 'Run configure script'
      failOnStderr: true
    - task: BatchScript@1
      displayName: Setenv from configure script
      inputs:
        filename: ext\OpenDDS\setenv.cmd
        modifyEnvironment: true
- job: VisualStudio2017
  timeoutInMinutes: 90
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
      Debug32:
        BuildPlatform: x86
        BuildConfiguration: Debug
      Release32:
        BuildPlatform: x86
        BuildConfiguration: Release
  variables:
    VCPKG_ROOT: $(Build.SourcesDirectory)\ext\vcpkg
    OPENDDS_ROOT: $(Build.SourcesDirectory)\ext\OpenDDS
  steps:
    - script: |
        git clone -q --depth 1 git://github.com/Microsoft/vcpkg.git %VCPKG_ROOT%
        call %VCPKG_ROOT%\bootstrap-vcpkg.bat
        if %BuildPlatform%==x64 (set VCVARS_ARCH=x64) else set VCVARS_ARCH=x86
        set VCPKG_ARCH=%VCVARS_ARCH%-windows
        echo ##vso[task.setvariable variable=VcVarsArch]%VCVARS_ARCH%
        %VCPKG_ROOT%\vcpkg install --triplet %VCPKG_ARCH% openssl xerces-c
        rmdir /s/q %VCPKG_ROOT%\packages %VCPKG_ROOT%\buildtrees
        echo ##vso[task.setvariable variable=VcPkgInst]%VCPKG_ROOT%\installed\%VCPKG_ARCH%
      displayName: 'Vcpkg'
      failOnStderr: true
    - script: |
        git clone -q --depth 1 git://github.com/objectcomputing/OpenDDS.git %OPENDDS_ROOT%
        if %BuildPlatform%==x64 (set VC_ARCH=x64) else set VC_ARCH=Win32
        echo ##vso[task.setvariable variable=VcArch]%VC_ARCH%
        echo ##vso[task.setvariable variable=OpenDdsRoot]%OPENDDS_ROOT%
      displayName: 'Clone OpenDDS'
      failOnStderr: true
    - script: |
        git fetch -q && git fetch -q --tags
        git checkout -q tags/DDS-3.13.2
      displayName: 'Checkout OpenDDS v3.13.2'
      workingDirectory: '$(OpenDdsRoot)'
      failOnStderr: true
    - script: |
        git apply $(Build.SourcesDirectory)\Patches\ConditionImpl.h.patch
        git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.cpp.patch
        git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.h.patch
      displayName: 'Apply OpenDDS->OpenDDSharp Patches'
      workingDirectory: '$(OpenDdsRoot)'
      failOnStderr: true
    - task: PowerShell@2
      displayName: 'Download ACE/TAO'
      inputs:
        targetType: 'inline'
        script: '& { Invoke-WebRequest -Uri ''http://download.ociweb.com/TAO-2.2a/ACE+TAO-2.2a_with_latest_patches_NO_makefiles.zip'' -OutFile ACE+TAO-2.2a_with_latest_patches_NO_makefiles.zip }'
        workingDirectory: '$(OpenDdsRoot)'
        failOnStderr: true
        filePath: #
    - task: CmdLine@2
      displayName: 'Unzip ACE/TAO'
      inputs:
        script: '7z x ACE+TAO-2.2a_with_latest_patches_NO_makefiles.zip'
        workingDirectory: '$(OpenDdsRoot)'
        failOnStderr: true
    - task: BatchScript@1
      displayName: 'VcVars'
      inputs:
        filename: '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"'
        arguments: $(BuildPlatform)
        modifyEnvironment: true
    - script: |
        setx PATH "C:\Strawberry\perl\bin;%PATH%"
      displayName: 'Put perl on PATH'
      failOnStderr: false
    - script: |
        echo %PATH%
        if %BuildConfiguration%==Release set OPT=--no-debug --optimize
        call configure -v --security --xerces3=$(VcPkgInst) --openssl=$(VcPkgInst) --no-tests %OPT%
      workingDirectory: $(OpenDdsRoot)
      displayName: 'Run configure script'
      failOnStderr: true
    - task: BatchScript@1
      displayName: 'Setenv from configure script'
      inputs:
        filename: $(Build.SourcesDirectory)\ext\OpenDDS\setenv.cmd
        modifyEnvironment: true
    - task: VSBuild@1
      displayName: 'Build OpenDDS solution'
      inputs:
        solution: ext\OpenDDS\DDS_TAOv2.sln
        platform: $(VcArch)
        configuration: $(BuildConfiguration)
        maximumCpuCount: true
    - script: |
        xcopy %OPENDDS_ROOT%\ACE_wrappers\lib\* %OPENDDS_ROOT%\ACE_wrappers\lib_%BuildPlatform% /s /i
        xcopy %OPENDDS_ROOT%\ACE_wrappers\bin\* %OPENDDS_ROOT%\ACE_wrappers\bin_%BuildPlatform% /s /i
        xcopy %OPENDDS_ROOT%\lib\* %OPENDDS_ROOT%\lib_%BuildPlatform% /s /i
        xcopy %OPENDDS_ROOT%\bin\* %OPENDDS_ROOT%\bin_%BuildPlatform% /s /i
        xcopy $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.IdlGenerator\HeaderTemplate.txt %DDS_ROOT%\dds\idl
        xcopy $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.IdlGenerator\ImplTemplate.txt %DDS_ROOT%\dds\idl
        msbuild $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.sln /t:OpenDDSharp_ExportFileGenerator /p:Configuration="$(BuildConfiguration)" /p:Platform="Any CPU" /p:BuildProjectReferences=false
        xcopy $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.ExportFileGenerator\bin\Release\* %ACE_ROOT%\bin
        nuget restore $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.sln
      displayName: 'Prepare to build OpenDDSharp'
      failOnStderr: true
    - task: VSBuild@1
      displayName: 'Build OpenDDS solution'
      inputs:
        solution: OpenDDSharp\OpenDDSharp.sln
        platform: $(BuildPlatform)
        configuration: $(BuildConfiguration)
        maximumCpuCount: true
