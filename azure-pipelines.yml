jobs:
- job: VisualStudio2019
  timeoutInMinutes: 90
  pool:
    vmImage: windows-2019
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
      Debug32:
        BuildPlatform: Win32
        BuildConfiguration: Debug
      Release32:
        BuildPlatform: Win32
        BuildConfiguration: Release
  variables:
    VCPKG_ROOT: $(Build.SourcesDirectory)\ext\vcpkg
    OPENDDS_ROOT: $(Build.SourcesDirectory)\ext\OpenDDS
  steps:
  - script: |
      git clone -q --depth 1 git://github.com/Microsoft/vcpkg.git %VCPKG_ROOT%
      call %VCPKG_ROOT%\bootstrap-vcpkg.bat
      if %BuildPlatform%==x64 (set VCVARS_ARCH=x64) else set VCVARS_ARCH=x86
      set VCPKG_ARCH=%VCVARS_ARCH%-windows
      echo ##vso[task.setvariable variable=VcVarsArch]%VCVARS_ARCH%
      %VCPKG_ROOT%\vcpkg install --triplet %VCPKG_ARCH% openssl xerces-c
      rmdir /s/q %VCPKG_ROOT%\packages %VCPKG_ROOT%\buildtrees
      echo ##vso[task.setvariable variable=VcPkgInst]%VCPKG_ROOT%\installed\%VCPKG_ARCH%
    displayName: Vcpkg
  - script: |
      git clone git://github.com/objectcomputing/OpenDDS.git %OPENDDS_ROOT%
      cd %OPENDDS_ROOT%
      git fetch && git fetch --tags
      git checkout tags/DDS-3.13.2
      git apply $(Build.SourcesDirectory)\Patches\ConditionImpl.h.patch
      git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.cpp.patch
      git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.h.patch
      if %BuildPlatform%==x64 (set VC_ARCH=x64) else set VC_ARCH=Win32
      echo ##vso[task.setvariable variable=VcArch]%VC_ARCH%
      cd $(Build.SourcesDirectory)
    displayName: 'Clone OpenDDS v3.13.2'
  - task: BatchScript@1
    displayName: VcVars
    inputs:
      filename: '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"'
      arguments: $(VcVarsArch)
      modifyEnvironment: true
  - task: BatchScript@1
    displayName: Put perl on PATH
    inputs:
      filename: tools\scripts\prepend_path
      arguments: 'C:\Strawberry\perl\bin'
      modifyEnvironment: true
  - script: |
      if %BuildConfiguration%==Release set OPT=--no-tests --no-debug --optimize
      call ext\OpenDDS\configure -v --ace-github-latest --xerces3=$(VcPkgInst) %OPT%
      if %BuildConfiguration%==Release (set SLN=DDS_TAOv2.sln) else set SLN=DDS_TAOv2_all.sln
      echo ##vso[task.setvariable variable=BuildSolution]%SLN%
    failOnStderr: #
    displayName: Run configure script
  - task: BatchScript@1
    displayName: Setenv from configure script
    inputs:
      filename: ext\OpenDDS\setenv.cmd
      modifyEnvironment: true
- job: VisualStudio2017
  timeoutInMinutes: 90
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Debug64:
        BuildPlatform: x64
        BuildConfiguration: Debug
      Release64:
        BuildPlatform: x64
        BuildConfiguration: Release
      Debug32:
        BuildPlatform: x86
        BuildConfiguration: Debug
      Release32:
        BuildPlatform: x86
        BuildConfiguration: Release
  variables:
    VCPKG_ROOT: $(Build.SourcesDirectory)\ext\vcpkg
    OPENDDS_ROOT: $(Build.SourcesDirectory)\ext\OpenDDS
  steps:
    - script: |
        git clone -q --depth 1 git://github.com/Microsoft/vcpkg.git %VCPKG_ROOT%
        call %VCPKG_ROOT%\bootstrap-vcpkg.bat
        if %BuildPlatform%==x64 (set VCVARS_ARCH=x64) else set VCVARS_ARCH=x86
        set VCPKG_ARCH=%VCVARS_ARCH%-windows
        echo ##vso[task.setvariable variable=VcVarsArch]%VCVARS_ARCH%
        %VCPKG_ROOT%\vcpkg install --triplet %VCPKG_ARCH% openssl xerces-c
        rmdir /s/q %VCPKG_ROOT%\packages %VCPKG_ROOT%\buildtrees
        echo ##vso[task.setvariable variable=VcPkgInst]%VCPKG_ROOT%\installed\%VCPKG_ARCH%
      displayName: Vcpkg
    - script: |
        git clone git://github.com/objectcomputing/OpenDDS.git %OPENDDS_ROOT%
        cd %OPENDDS_ROOT%
        git fetch && git fetch --tags
        git checkout tags/DDS-3.13.2
        git apply $(Build.SourcesDirectory)\Patches\ConditionImpl.h.patch
        git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.cpp.patch
        git apply $(Build.SourcesDirectory)\Patches\DataReaderImpl.h.patch
        if %BuildPlatform%==x64 (set VC_ARCH=x64) else set VC_ARCH=Win32
        echo ##vso[task.setvariable variable=VcArch]%VC_ARCH%
        cd $(Build.SourcesDirectory)
      displayName: 'Clone OpenDDS v3.13.2'
    - task: BatchScript@1
      displayName: 'VcVars'
      inputs:
        filename: '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"'
        arguments: $(BuildPlatform)
        modifyEnvironment: true
    - script: |
        set PATH='C:\Strawberry\perl\bin';%PATH%
        echo %PATH%
      displayName: 'Put perl on PATH'      
    - script: |
        if %BuildConfiguration%==Release set OPT=--no-debug --optimize
        call ext\OpenDDS\configure -v --ace-github-latest --security --xerces3=$(VcPkgInst) --openssl=$(VcPkgInst) --no-tests %OPT%
      failOnStderr: #
      displayName: 'Run configure script'
    - task: BatchScript@1
      displayName: 'Setenv from configure script'
      inputs:
        filename: ext\OpenDDS\setenv.cmd
        modifyEnvironment: true
    - task: VSBuild@1
      displayName: 'Build OpenDDS solution'
      inputs:
        solution: ext\OpenDDS\DDS_TAOv2.sln
        platform: $(VcArch)
        configuration: $(BuildConfiguration)
        maximumCpuCount: true
    - script: |
        xcopy $(Build.SourcesDirectory)\ext\OpenDDS\ACE_wrappers\lib\* $(Build.SourcesDirectory)\ext\OpenDDS\ACE_wrappers\lib_%BuildPlatform% /s /i
        xcopy $(Build.SourcesDirectory)\ext\OpenDDS\ACE_wrappers\bin\* $(Build.SourcesDirectory)\ext\OpenDDS\ACE_wrappers\bin_%BuildPlatform% /s /i
        xcopy $(Build.SourcesDirectory)\ext\OpenDDS\lib\* $(Build.SourcesDirectory)\ext\OpenDDS\lib_%BuildPlatform% /s /i
        xcopy $(Build.SourcesDirectory)\ext\OpenDDS\bin\* $(Build.SourcesDirectory)\ext\OpenDDS\bin_%BuildPlatform% /s /i
        xcopy $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.IdlGenerator\HeaderTemplate.txt %DDS_ROOT%\dds\idl
        xcopy $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.IdlGenerator\ImplTemplate.txt %DDS_ROOT%\dds\idl
        msbuild $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.sln /t:OpenDDSharp_ExportFileGenerator /p:Configuration="$(BuildConfiguration)" /p:Platform="Any CPU" /p:BuildProjectReferences=false
        xcopy $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.ExportFileGenerator\bin\Release\* %ACE_ROOT%\bin
        nuget restore $(Build.SourcesDirectory)\OpenDDSharp\OpenDDSharp.sln
      displayName: 'Prepare to build OpenDDSharp'
    - task: VSBuild@1
      displayName: 'Build OpenDDS solution'
      inputs:
        solution: OpenDDSharp\OpenDDSharp.sln
        platform: $(BuildPlatform)
        configuration: $(BuildConfiguration)
        maximumCpuCount: true
